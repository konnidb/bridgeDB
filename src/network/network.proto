syntax = "proto3";

package network;

message Query {
    int32 number = 1;
    string message = 2;
}

message QueryResponse {
    string response = 1;
}

message NetworkNode{
    int64 id = 1;
    map<string, string> fields = 2;    
}

message NetworkEdge {
    string label = 1;
    map<string, string> fields = 2;
}

message CreateNodeReq {
    int64 id = 1;
    map<string, string> fields = 2;
}

message CreateNodeResponse {
    NetworkNode node = 1;
}

message CreateEdgeReq {
    string label = 1;
    map<string, string> fields = 2;
}

message CreateEdgeResponse {
    NetworkEdge edge = 1;
}

message CreateRelationReq {
    NetworkNode source = 1;
    NetworkNode destination = 2;
    NetworkEdge edgeData = 3;
}

message CraeteRelationResponse {
    NetworkNode source = 1;
    NetworkNode destination = 2;
    NetworkEdge edge = 3;
}

message DeleteNodeReq {
    NetworkNode node = 1;
}

message DeleteNodeResponse {
    NetworkNode node = 1;
}

message DeleteEdgeReq {
    NetworkEdge edge = 1;
}

message DeleteEdgeResponse {
    NetworkEdge edge = 1;
}

message SearchNodeReq {
    NetworkNode node = 1;
}

message SearchNodeResponse {
    repeated NetworkNode nodes = 1;
}

message Session {
    string session_uuid = 1;
}

message SessionRequest {
    string username = 1;
    string password = 2;
}

service QueryService {
    rpc CreateSession (stream SessionRequest) returns (stream Session) {};
    rpc ExecuteQuery (Query) returns (QueryResponse) {};
    rpc CreateNode (CreateNodeReq) returns (CreateNodeResponse) {};
    rpc DeleteNode (DeleteNodeReq) returns (DeleteNodeResponse) {};
    rpc CreateRelation (CreateRelationReq) returns (CraeteRelationResponse) {};
    rpc CreateEdge (CreateEdgeReq) returns (CreateEdgeResponse) {};
    rpc DeleteEdge (DeleteEdgeReq) returns (DeleteEdgeResponse) {};
    rpc SearchNode (SearchNodeReq) returns (SearchNodeResponse) {};
}
